# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  api-gateway:
    container_name: 'api-gateway'
    image: 'redsnoww/api-gateway:0.2.0'
    ports:
      - "8091:8080"
    environment:
      - 'MS_LOGIN_HOST=http://server-ms-login'
      - 'MS_LOGIN_PORT=8080'
      - 'MS_LOGIN_PATH=/api/ms-login-api/'
      - 'MS_SHOP_HOST=http://server-ms-shop'
      - 'MS_SHOP_PORT=8080'
      - 'MS_SHOP_PATH=/api/ms-shop-api/'
      - 'MS_QUOTE_HOST=http://server-ms-quote'
      - 'MS_QUOTE_PORT=8080'
      - 'MS_QUOTE_PATH=/api/ms-quote-api/'

  server-ms-login:
    container_name: 'server-ms-login'
    image: 'redsnoww/ms-login-api:1.0.3'
    ports:
      - "8081:8080"
    environment:
      - 'SPRING_APP_URL=8080'
      - 'SPRING_DATASOURCE_URL=jdbc:mysql://db-ms-login:3306/db-ms-login'
      - 'SPRING_DATASOURCE_USERNAME=user'
      - 'SPRING_DATASOURCE_PASSWORD=secret'
      - 'SPRING_RABBITMQ_HOST=rabbitmq'
      - 'SPRING_RABBITMQ_PORT=5672'
      - 'EUREKA_HOST=http://server-ms-eureka:8761/eureka/'

    depends_on:
      db-ms-login:
        condition: service_healthy

  db-ms-login:
    container_name: 'db-ms-login'
    image: 'mysql:latest'
    environment:
      - 'MYSQL_DATABASE=db-ms-login'
      - 'MYSQL_PASSWORD=secret'
      - 'MYSQL_ROOT_PASSWORD=secret'
      - 'MYSQL_USER=user'
    ports:
      - '3308:3306'

    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5

  ##############################################
  ########## SHOP API ##########################

  server-ms-shop:
    container_name: 'server-ms-shop'
    image: 'redsnoww/ms-shop-api:0.11.2'
    ports:
      - "8082:8080"

    depends_on:
      db-ms-shop:
        condition: service_healthy
    environment:
      - 'SPRING_APP_PORT=8080'
      - 'SPRING_DATASOURCE_URL=jdbc:mysql://db-ms-shop:3306/db-ms-shop'
      - 'SPRING_DATASOURCE_USERNAME=user'
      - 'SPRING_DATASOURCE_PASSWORD=secret'
      - 'SPRING_RABBITMQ_HOST=rabbitmq'
      - 'SPRING_RABBITMQ_PORT=5672'
      - 'EUREKA_HOST=http://server-ms-eureka:8761/eureka/'

  ### juste lancé ça si au dessus ça build pas
  db-ms-shop:
    container_name: 'db-ms-shop'
    image: 'mysql:latest'
    environment:
      - 'MYSQL_DATABASE=db-ms-shop'
      - 'MYSQL_PASSWORD=secret'
      - 'MYSQL_ROOT_PASSWORD=secret'
      - 'MYSQL_USER=user'

    ports:
      - '3309:3306'
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5

  server-ms-mail:
    container_name: 'server-ms-mail'
    image: 'redsnoww/ms-mail-api:0.4.0'
    environment:
      - 'SPRING_RABBITMQ_PORT=5672'
      - 'SPRING_RABBITMQ_HOST=rabbitmq'
      - 'SPRING_RABBITMQ_USERNAME=guest'
      - 'SPRING_RABBITMQ_PASSWORD=guest'
      - 'SPRING_MAIL_HOST=smtp.gmail.com'
      - 'SPRING_MAIL_PORT=587'
      - 'SPRING_MAIL_USERNAME=mycloseshopapp@gmail.com'
      - 'SPRING_MAIL_PASSWORD=kdje ybxm ovdq tvut'
      - 'SPRING_MAIL_PROTOCOL=smtp'

  server-ms-quote:
    container_name: 'server-ms-quote'
    image: 'redsnoww/ms-quote-api:0.2.0'
    ports:
      - "8083:8080"
    depends_on:
      db-ms-quote:
        condition: service_healthy

    environment:
      - 'SPRING_APP_URL=8080'
      - 'SPRING_DATASOURCE_URL=jdbc:mysql://db-ms-quote:3306/db-ms-quote'
      - 'SPRING_DATASOURCE_USERNAME=user'
      - 'SPRING_DATASOURCE_PASSWORD=secret'
      - 'SPRING_RABBITMQ_HOST=rabbitmq'
      - 'SPRING_RABBITMQ_PORT=5672'


  db-ms-quote:
    container_name: 'db-ms-quote'
    image: 'mysql:latest'

    environment:
      - 'MYSQL_DATABASE=db-ms-quote'
      - 'MYSQL_PASSWORD=secret'
      - 'MYSQL_ROOT_PASSWORD=secret'
      - 'MYSQL_USER=user'

    ports:
      - '3310:3306'
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5

      ##############################################

  server-ms-social:
    container_name: 'server-ms-social'
    image: 'redsnoww/ms-social-api:0.1.0'
    ports:
      - "8084:8080"
    depends_on:
      db-ms-social:
        condition: service_healthy

    environment:
      - 'SPRING_APP_URL=8080'
      - 'SPRING_DATASOURCE_URL=jdbc:mysql://db-ms-social:3306/db-ms-social'
      - 'SPRING_DATASOURCE_USERNAME=user'
      - 'SPRING_DATASOURCE_PASSWORD=secret'
      - 'SPRING_RABBITMQ_HOST=rabbitmq'
      - 'SPRING_RABBITMQ_PORT=5672'


  db-ms-social:
    container_name: 'db-ms-social'
    image: 'mysql:latest'

    environment:
      - 'MYSQL_DATABASE=db-ms-social'
      - 'MYSQL_PASSWORD=secret'
      - 'MYSQL_ROOT_PASSWORD=secret'
      - 'MYSQL_USER=user'

    ports:
      - '3311:3306'
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5

      ##############################################

  rabbitmq:
    container_name: 'rabbitmq'
    image: 'rabbitmq:management'

    environment:
      - 'RABBITMQ_DEFAULT_PASS=guest'
      - 'RABBITMQ_DEFAULT_USER=guest'
    ports:
      - '15672:15672'
      - '5672:5672'
